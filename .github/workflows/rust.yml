name: Rust


on:
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  HEROKU_APP: baracca

jobs:

  fe:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: cd house-fe && npm ci    
      - name: Test
        run: cd house-fe && npm test
        env:
          CI: true
  be:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: test
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 27017:27017

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          preference-be/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cd preference-be/ && cargo build --verbose
    - name: Run tests
      run: cd preference-be/ && cargo test --verbose

  docker:
    needs: [fe, be]
    environment: HEROKU
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
    - name: Build the Docker image
      run: docker build -t registry.heroku.com/${HEROKU_APP}/web:latest .
    - name: Docker image info
      run: docker images
    - name: Login to container registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login
    - name: Publish
      run: docker push registry.heroku.com/${HEROKU_APP}/web:latest
  
  release:
    needs: [docker]
    runs-on: ubuntu-latest
    environment: HEROKU
    steps:
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${HEROKU_APP} web
